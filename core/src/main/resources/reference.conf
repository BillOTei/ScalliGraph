ignoreDatabaseConfiguration = false

storage {
  # provider =
  localfs.location = /tmp/scalligraph
  database.chunkSize = 32k
}
session {
  inactivity = 1h
  warning = 5m
  username = username
}
auth {
  organisationHeader = "X-Organisation"
  defaults {
    ad {
      # dnsDomain =
      # winDomain =
      # hosts =
      useSSL = false
    }
    header {
      userHeader = "X-USERID"
    }
    ldap {
      # bindDN =
      # bindPW =
      # baseDN =
      # filter =
      # hosts =
      useSSL = false
    }
    pki {
      certificateField = cn
    }
    session {
      inactivity = 1 hour
      warning = 5 minutes
    }
    oauth2 {
      #clientId =
      #clientSecret =
      #redirectUri =
      #responseType =
      #grantType =
      #authorizationUrl =
      #tokenUrl =
      #userUrl =
      #scope = []
      #userIdField =
      #userOrganisationField =
      #defaultOrganisation =
      #authorizationHeader =
    }
    # Single-Sign On
    sso {
      # Autocreate user in database?
      #autocreate = false

      # Autoupdate its profile and roles?
      #autoupdate = false

      # Attributes mappings
      #attributes {
      #  login = "sub"
      #  name = "name"
      #  groups = "groups"
      #  #roles = "roles"
      #}

      # Name of mapping class from user resource to backend user ('simple' or 'group')
      #mapper = group
      # Default roles for users with no groups mapped ("read", "write", "admin")
      #defaultRoles = []

      #groups {
      #  # URL to retreive groups (leave empty if you are using OIDC)
      #  #url = "https://auth-site.com/api/Groups"
      #  # Group mappings, you can have multiple roles for each group: they are merged
      #  mappings {
      #    admin-profile-name = ["admin"]
      #    editor-profile-name = ["write"]
      #    reader-profile-name = ["read"]
      #  }
      #}
    }
  }
}